version: "3.8"

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: billtracker_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "billtracker_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: ./backend
    container_name: billtracker_backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: admin
      DB_PASS: admin123
      DB_NAME: billtracker_db
    volumes:
      - ./backend:/app
      - /app/node_modules  # ðŸ”¥ Evita problemas de dependencias
    command: npm run start:dev

  frontend:
    build: ./frontend
    container_name: billtracker_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules  # ðŸ”¥ Evita problemas de dependencias
    command: npm run dev -- --host 0.0.0.0
    

volumes:
  postgres_data:
